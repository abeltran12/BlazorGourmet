@page "/lastests/detail/{Id}"
@inject CachedMemberService MealDbService

@if (Recipe is not null)
{
    <section class="principal" id="principal">
        <div class="principal-img d-flex flex-column">
            <!-- Image occupying full width -->
            <div>
                <img src="@Recipe.MealThumb" alt="food-collage" class="img-fluid" />
            </div>

            <!-- Tags below the image -->
            <div class="tags mt-1">
                @if (Recipe.TagsEnLista.Count() > 0)
                {
                    foreach (var item in Recipe.TagsEnLista)
                    {
                        <span class="badge text-bg-success me-1">@item</span>
                    }
                }
            </div>
        </div>


        <div class="principal-content">
            <h1 class="heading">@Recipe.Meal</h1>
            <p>@Recipe.Instructions</p>
        </div>
    </section>

    <section class="principal secondary" id="secondary">
        <div class="principal-content d-flex flex-column col-12">
            <h1 class="heading">Video</h1>
            <div class="video-container">
                <iframe src="@Recipe.Youtube"
                        title="YouTube video player"
                        frameborder="0"
                        allow="accelerometer; autoplay; clipboard-write; 
                                encrypted-media; gyroscope; picture-in-picture; web-share"
                        referrerpolicy="strict-origin-when-cross-origin"
                        allowfullscreen>
                </iframe>
            </div>
        </div>


        <div class="principal-content col-12 ps-5">
            <h1 class="heading">Instructions</h1>
            <div class="table-responsive" style="max-height: 300px; overflow-y: auto;">
                <!-- Scroll vertical -->
                <table class="table table-striped table-hover">
                    <thead>
                        <tr>
                            <th scope="col">#</th>
                            <th scope="col">Ingredient</th>
                            <th scope="col">Measure</th>
                        </tr>
                    </thead>
                    <tbody class="table-group-divider">
                        @for (int i = 0; i < Recipe.Ingredients.Count(); i++)
                        {
                            <tr>
                                <th scope="row">@Recipe.Ingredients[i].Id</th>
                                <td>@Recipe.Ingredients[i].Name</td>
                                <td>@Recipe.Ingredients[i].Messure</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </section>
}
else
{
    <Loader />
}


@code {
    [Parameter]
    [EditorRequired]
    public required string Id { get; set; }

    public Recipe? Recipe { get; set; }

    protected override async Task OnInitializedAsync()
    {
        Recipe = await MealDbService.GetMealById(Id);
        if (!string.IsNullOrEmpty(Recipe!.Youtube))
            Recipe.Youtube = Recipe.Youtube.Replace("watch?v=", "embed/");
    }

}
